{"version":3,"sources":["deserializer.es6"],"names":[],"mappings":"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","file":"deserializer.js","sourcesContent":["'use strict';\r\nimport _ from 'lodash';\r\nimport autobind from 'autobind-decorator'\r\n\r\nexport default class Deserializer {\r\n  static Symbols = {PostProcess: Symbol()};\r\n\r\n  data = null;\r\n  instances = null;\r\n  objectsToPostProcess = [];\r\n  _nativeTypeMap = new Map([\r\n    ['__object__', this.convertDtoToNativeObject.bind(this)],\r\n    ['__array__', this.convertDtoToNativeArray.bind(this)],\r\n    ['__native_map__', this.convertDtoToNativeMap.bind(this)],\r\n    ['__native_set__', this.convertDtoToNativeSet.bind(this)],\r\n  ]);\r\n\r\n  constructor(jsonc) {\r\n    this.jsonc = jsonc;\r\n  }\r\n\r\n  deserialize(data) {\r\n    this.data = data;\r\n    this.instances = this._map(this.data.instances, this._instantiateValue);\r\n\r\n    _.forEach(this.instances, this._restoreProperties);\r\n    this._restoreProperties(this.data.root);\r\n    _.forEach(this.objectsToPostProcess, this._postProcess);\r\n\r\n    return this.data.root[0];\r\n  }\r\n\r\n  @autobind\r\n  _map(obj, fn) {\r\n    if (obj instanceof Array)\r\n      return _.map(obj, fn, this);\r\n    else\r\n      return _.mapValues(obj, fn, this);\r\n  }\r\n\r\n  @autobind\r\n  _instantiateValue(value) {\r\n    const isRegisteredType = (obj) => '__type__' in obj && obj.__type__ && this.jsonc.hasTypeName(obj.__type__);\r\n    const isFunction = (obj) => '__fn__' in obj;\r\n    const isNativeType = (obj) => '__type__' in obj && this._nativeTypeMap.has(obj.__type__);\r\n\r\n    const typeCategory = this._getTypeCategory(value);\r\n\r\n    if (typeCategory === 'primitive')\r\n      return value;\r\n\r\n    if (typeCategory === 'object') {\r\n      if (isRegisteredType(value))\r\n        return instantiateRegisteredType.call(this, value);\r\n\r\n      if (isNativeType(value))\r\n        return instantiateNativeType.call(this, value);\r\n    } else if (typeCategory === 'function')\r\n      return this._restoreRegisteredFunction(value);\r\n\r\n    return value;\r\n\r\n\r\n    function instantiateRegisteredType(obj) {\r\n      var instance = new this.jsonc.registry[obj.__type__].type();\r\n      if (instance[Deserializer.Symbols.PostProcess])\r\n        this.objectsToPostProcess.push(instance);\r\n      return this.restoreInstance(instance, obj);\r\n    }\r\n\r\n    function instantiateNativeType(obj) {\r\n      return this._nativeTypeMap.get(obj.__type__)(obj);\r\n    }\r\n\r\n  }\r\n\r\n  convertDtoToNativeObject(obj) {\r\n    return _.assign({}, obj.__value__);\r\n  }\r\n\r\n  convertDtoToNativeArray(obj) {\r\n    return this.restoreInstance([], obj);\r\n  }\r\n\r\n  restoreInstance(instance, obj) {\r\n    const data = obj.__value__.__array__ || obj.__value__;\r\n    _.assign(instance, data);\r\n    if (obj.__value__.__props__)\r\n      _.assign(instance, obj.__value__.__props__);\r\n\r\n    return instance;\r\n  }\r\n\r\n  _restoreRegisteredFunction(obj) {\r\n    const fn = this.jsonc.fnReverseRegistry.get(obj.__fn__);\r\n    if (!fn) {\r\n      console.warn(`Unable to restore function ${obj.__fn__}: function not registered!`);\r\n      return;\r\n    }\r\n\r\n    return fn;\r\n  }\r\n\r\n  convertDtoToNativeMap(obj) {\r\n    return new Map([obj.__value__]);\r\n  }\r\n\r\n  convertDtoToNativeSet(obj) {\r\n    return new Set(obj.__value__);\r\n  }\r\n\r\n  @autobind\r\n  _getTypeCategory(value) {\r\n    const type = typeof value;\r\n    if (type === 'function' || (value !== null && type === 'object'))\r\n      return value.__fn__ ? 'function' : type;\r\n    return 'primitive';\r\n  }\r\n\r\n  @autobind\r\n  _restoreProperties(obj) {\r\n    const typeCategory = this._getTypeCategory(obj);\r\n    if (typeCategory === 'function')\r\n      return this._restoreRegisteredFunction(obj);\r\n    if (typeCategory !== 'object')\r\n      return;\r\n    if (obj instanceof Map)\r\n      this._restoreMapPairs(obj);\r\n    else\r\n      _.forOwn(obj, this._restoreProperty);\r\n  }\r\n\r\n  _restoreMapPairs(obj) {\r\n    const keys = [...obj.keys()];\r\n    keys.forEach(key=> {\r\n      if (!key) return;\r\n      obj.delete(key);\r\n      const instance = this.instances[key.__index__];\r\n      obj.set(instance[0], instance[1]);\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  _restoreProperty(value, key, obj) {\r\n    const isReference = (obj) => '__index__' in obj;\r\n    const typeCategory = this._getTypeCategory(value);\r\n    if (typeCategory === 'function')\r\n      obj[key] = this._restoreRegisteredFunction(value);\r\n    if (typeCategory !== 'object')\r\n      return;\r\n\r\n    if (isReference(value))\r\n      obj[key] = this.instances[value.__index__];\r\n  }\r\n\r\n  @autobind\r\n  _postProcess(obj) {\r\n    obj[Deserializer.Symbols.PostProcess]();\r\n  }\r\n}\r\n"]}
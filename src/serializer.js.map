{"version":3,"sources":["serializer.es6"],"names":[],"mappings":"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","file":"serializer.js","sourcesContent":["\"use strict\";\r\nimport _ from 'lodash';\r\nimport autobind from 'autobind-decorator'\r\n\r\nexport default class Serializer {\r\n  static Symbols = {Serialize: Symbol()};\r\n  _nativeTypeMap = new Map([\r\n    [Array, this.convertNativeArrayToDto.bind(this)],\r\n    [Map, this.convertNativeMapToDto.bind(this)],\r\n    [Set, this.convertNativeSetToDto.bind(this)],\r\n  ]);\r\n  _instancesMap = new Map();\r\n  _instances = [];\r\n\r\n  constructor(jsonc) {\r\n    this.jsonc = jsonc;\r\n  }\r\n\r\n  serialize(data) {\r\n    this.data = data;\r\n    return {\r\n      instances: this._instances,\r\n      root: this._map(this.data)\r\n    };\r\n  }\r\n\r\n  convertRegisteredTypeToDto(obj) {\r\n    var reference = this._getInstance(obj);\r\n    if (reference)\r\n      return reference;\r\n\r\n    var instance = {\r\n      __type__: obj.constructor.__type__\r\n    };\r\n\r\n    reference = this._addInstance(obj, instance);\r\n\r\n    const data = Serializer.Symbols.Serialize in obj\r\n      ? obj[Serializer.Symbols.Serialize]()\r\n      : obj;\r\n\r\n    const options = this.jsonc.getOptions(instance.__type__);\r\n    instance.__value__ = this._map(data, options);\r\n\r\n    return reference;\r\n  }\r\n\r\n  convertPlainObjectToDto(obj) {\r\n    var reference = this._getInstance(obj);\r\n    if (reference)\r\n      return reference;\r\n\r\n    var instance = {\r\n      __type__: \"__object__\"\r\n    };\r\n    reference = this._addInstance(obj, instance);\r\n\r\n    const data = Serializer.Symbols.Serialize in obj\r\n      ? obj[Serializer.Symbols.Serialize]()\r\n      : obj;\r\n\r\n    instance.__value__ = this._map(data);\r\n\r\n    return reference;\r\n  }\r\n\r\n  convertNativeTypeToDto(obj) {\r\n    let reference = this._getInstance(obj);\r\n    if (reference)\r\n      return reference;\r\n\r\n    const convertToDto = this._nativeTypeMap.get(obj.constructor);\r\n    return convertToDto(obj);\r\n  }\r\n\r\n  convertNativeArrayToDto(obj) {\r\n    var instance = {\r\n      __type__: \"__array__\"\r\n    };\r\n    const reference = this._addInstance(obj, instance);\r\n    instance.__value__ = this._map(obj);\r\n\r\n    return reference;\r\n  }\r\n\r\n  convertNativeMapToDto(obj) {\r\n    var instance = {\r\n      __type__: \"__native_map__\"\r\n    };\r\n    const reference = this._addInstance(obj, instance);\r\n    instance.__value__ = this._map([...obj]);\r\n\r\n    return reference;\r\n  }\r\n\r\n  convertNativeSetToDto(obj) {\r\n    var instance = {\r\n      __type__: \"__native_set__\"\r\n    };\r\n    const reference = this._addInstance(obj, instance);\r\n    instance.__value__ = this._map([...obj]);\r\n\r\n    return reference;\r\n  }\r\n\r\n  isSerializableObject(obj) {\r\n    if (obj === null || obj === undefined)\r\n      return false;\r\n\r\n    var constructor = obj.constructor;\r\n    return (this.jsonc.hasType(constructor))\r\n      || constructor === Object\r\n      || this._nativeTypeMap.has(constructor);\r\n  }\r\n\r\n  @autobind\r\n  _addInstance(originalObject, instance) {\r\n    if (this._instancesMap.get(originalObject))\r\n      return;\r\n    var reference = {__index__: this._instances.length};\r\n    this._instances.push(instance);\r\n    this._instancesMap.set(originalObject, reference);\r\n    return reference;\r\n  }\r\n\r\n  @autobind\r\n  _map(obj, options) {\r\n    if (obj instanceof Array)\r\n      return _.map(obj, this._mapValue);\r\n    else {\r\n      if (options) {\r\n        if (options.exclude)\r\n          obj = _.omit(obj, options.exclude);\r\n        if (options.include)\r\n          obj = _.pick(obj, options.include);\r\n      }\r\n      return _.mapValues(obj, this._mapValue);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  _mapValue(value) {\r\n    var typeCategory = getTypeCategory(value);\r\n    if (typeCategory === \"primitive\")\r\n      return value;\r\n    if (typeCategory === \"object\")\r\n      return this._mapObject(value);\r\n\r\n    function getTypeCategory(value) {\r\n      var type = typeof value;\r\n      if (type === \"function\" || (value !== null && type === \"object\"))\r\n        return type;\r\n      return \"primitive\";\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  _mapObject(obj) {\r\n    if (!this.isSerializableObject(obj)) {\r\n      console.warn(`The following object of constructor ${obj.constructor.toString()} is not a serializable object and will NOT be recorded!`);\r\n      console.dir(obj);\r\n      return null;\r\n    }\r\n\r\n    if (obj.constructor.__type__)\r\n      return this.convertRegisteredTypeToDto(obj);\r\n\r\n    if (obj.constructor === Object)\r\n      return this.convertPlainObjectToDto(obj);\r\n\r\n    return this.convertNativeTypeToDto(obj);\r\n  }\r\n\r\n  @autobind\r\n  _getInstance(instance) {\r\n    return this._instancesMap.get(instance);\r\n  }\r\n}\r\n"]}
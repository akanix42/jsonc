{"version":3,"sources":["jsonc.es6"],"names":[],"mappings":"AAAA;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEqB;;;;SACnB,WAAW;;;eADQ;;6BAGV,MAAM,UAAU;AACvB,iBAAW,YAAY,KAAK,QAAL,CADA;AAEvB,UAAI,CAAC,QAAD,EAAW;AACb,gBAAQ,KAAR,CAAc,gDAAd,EADa;AAEb,eAFa;OAAf;;AAKA,UAAI,KAAK,WAAL,CAAiB,QAAjB,CAAJ,EAAgC;AAC9B,gBAAQ,KAAR,8BAAyC,0CAAqC,KAAK,QAAL,CAAc,QAAd,EAAwB,QAAxB,QAA9E,EAAqH,IAArH,EAD8B;AAE9B,eAF8B;OAAhC;;AAKA,WAAK,QAAL,CAAc,QAAd,IAA0B,IAA1B,CAZuB;AAavB,WAAK,QAAL,GAAgB,QAAhB,CAbuB;;;;4BAgBjB,MAAM;AACZ,aAAO,cAAc,IAAd,IAAsB,KAAK,QAAL,KAAkB,SAAlB,IAA+B,KAAK,WAAL,CAAiB,KAAK,QAAL,CAAtE,CADK;;;;gCAIF,UAAU;AACpB,aAAO,YAAY,KAAK,QAAL,CADC;;;;8BAIZ,MAAM;AACd,aAAO,eAAM,SAAN,CAAgB,KAAK,SAAL,CAAe,IAAf,CAAhB,CAAP,CADc;;;;0BAIV,MAAM;AACV,aAAO,KAAK,WAAL,CAAiB,eAAM,KAAN,CAAY,IAAZ,CAAjB,CAAP,CADU;;;;8BAIF,MAAM;AACd,aAAO,2BAAiB,SAAjB,CAA2B,IAA3B,CAAP,CADc;;;;gCAIJ,MAAM;AAChB,aAAO,6BAAmB,WAAnB,CAA+B,IAA/B,CAAP,CADgB;;;;SAvCC","file":"jsonc.js","sourcesContent":["\"use strict\";\r\nimport json5 from 'json5';\r\nimport Serializer from './serializer';\r\nimport Deserializer from './deserializer';\r\n\r\nexport default class Jsonc {\r\n  registry = {};\r\n\r\n  register(type, typeName) {\r\n    typeName = typeName || type.__type__;\r\n    if (!typeName) {\r\n      console.error(\"Error registering type: no typename specified!\");\r\n      return;\r\n    }\r\n\r\n    if (this.hasTypeName(typeName)) {\r\n      console.error(`Error registering type: ${typeName} is already registered by ${this.registry[typeName].toString()}!`, type);\r\n      return;\r\n    }\r\n\r\n    this.registry[typeName] = type;\r\n    type.__type__ = typeName;\r\n  }\r\n\r\n  hasType(type) {\r\n    return '__type__' in type && type.__type__ !== undefined && this.hasTypeName(type.__type__);\r\n  }\r\n\r\n  hasTypeName(typeName) {\r\n    return typeName in this.registry;\r\n  }\r\n\r\n  stringify(data) {\r\n    return json5.stringify(this.serialize(data));\r\n  }\r\n\r\n  parse(json) {\r\n    return this.deserialize(json5.parse(json));\r\n  }\r\n\r\n  serialize(data) {\r\n    return new Serializer().serialize(data);\r\n  }\r\n\r\n  deserialize(data) {\r\n    return new Deserializer().deserialize(data);\r\n  }\r\n}"]}
{"version":3,"sources":["jsonc.es6"],"names":[],"mappings":"AAAA;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqB,K,GAAN,MAAM,KAAN,CAAY;AAAA;AAAA,SACzB,QADyB,GACd,EADc;AAAA;;AAGzB,WAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,EAAkC;AAChC,eAAW,YAAY,KAAK,QAA5B;AACA,QAAI,CAAC,QAAL,EAAe;AACb,cAAQ,KAAR,CAAc,gDAAd;AACA;AACD;;AAED,QAAI,KAAK,WAAL,CAAiB,QAAjB,CAAJ,EAAgC;AAC9B,cAAQ,KAAR,CAAc,CAAC,wBAAD,GAA2B,QAA3B,EAAoC,0BAApC,GAAgE,KAAK,QAAL,CAAc,QAAd,EAAwB,IAAxB,CAA6B,QAA7B,EAAhE,EAAwG,CAAxG,CAAd,EAA0H,IAA1H;AACA;AACD;;AAED,SAAK,QAAL,CAAc,QAAd,IAA0B,EAAC,IAAD,EAAO,OAAP,EAA1B;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;AAED,UAAQ,IAAR,EAAc;AACZ,WAAO,cAAc,IAAd,IAAsB,KAAK,QAAL,KAAkB,SAAxC,IAAqD,KAAK,WAAL,CAAiB,KAAK,QAAtB,CAA5D;AACD;;AAED,cAAY,QAAZ,EAAsB;AACpB,WAAO,YAAY,KAAK,QAAxB;AACD;;AAED,aAAW,QAAX,EAAqB;AACnB,UAAM,eAAe,KAAK,QAAL,CAAc,QAAd,CAArB;AACA,QAAI,CAAC,YAAL,EACE,OAAO,EAAP;;AAEF,QAAI,OAAJ;AACA,UAAM,iBAAiB,aAAa,IAAb,CAAkB,SAAlB,CAA4B,QAAnD;AACA,QAAI,cAAJ,EACE,UAAU,iBAAE,KAAF,CAAQ,KAAK,UAAL,CAAgB,cAAhB,CAAR,EAAyC,aAAa,OAAtD,CAAV,CADF,KAGE,UAAU,aAAa,OAAvB;AACF,WAAO,OAAP;AACD;;AAED,YAAU,IAAV,EAAgB;AACd,WAAO,eAAM,SAAN,CAAgB,KAAK,SAAL,CAAe,IAAf,CAAhB,CAAP;AACD;;AAED,QAAM,IAAN,EAAY;AACV,WAAO,KAAK,WAAL,CAAiB,eAAM,KAAN,CAAY,IAAZ,CAAjB,CAAP;AACD;;AAED,YAAU,IAAV,EAAgB;AACd,WAAO,yBAAe,IAAf,EAAqB,SAArB,CAA+B,IAA/B,CAAP;AACD;;AAED,cAAY,IAAZ,EAAkB;AAChB,WAAO,2BAAiB,IAAjB,EAAuB,WAAvB,CAAmC,IAAnC,CAAP;AACD;AAvDwB,C;kBAAN,K","file":"jsonc.js","sourcesContent":["\"use strict\";\r\nimport json5 from 'json5';\r\nimport _ from 'lodash';\r\nimport Serializer from './serializer';\r\nimport Deserializer from './deserializer';\r\n\r\nexport default class Jsonc {\r\n  registry = {};\r\n\r\n  register(type, typeName, options) {\r\n    typeName = typeName || type.__type__;\r\n    if (!typeName) {\r\n      console.error(\"Error registering type: no typename specified!\");\r\n      return;\r\n    }\r\n\r\n    if (this.hasTypeName(typeName)) {\r\n      console.error(`Error registering type: ${typeName} is already registered by ${this.registry[typeName].type.toString()}!`, type);\r\n      return;\r\n    }\r\n\r\n    this.registry[typeName] = {type, options};\r\n    type.__type__ = typeName;\r\n  }\r\n\r\n  hasType(type) {\r\n    return '__type__' in type && type.__type__ !== undefined && this.hasTypeName(type.__type__);\r\n  }\r\n\r\n  hasTypeName(typeName) {\r\n    return typeName in this.registry;\r\n  }\r\n\r\n  getOptions(typeName) {\r\n    const registration = this.registry[typeName];\r\n    if (!registration)\r\n      return {};\r\n\r\n    let options;\r\n    const parentTypeName = registration.type.__proto__.__type__;\r\n    if (parentTypeName)\r\n      options = _.merge(this.getOptions(parentTypeName), registration.options);\r\n    else\r\n      options = registration.options;\r\n    return options;\r\n  }\r\n\r\n  stringify(data) {\r\n    return json5.stringify(this.serialize(data));\r\n  }\r\n\r\n  parse(json) {\r\n    return this.deserialize(json5.parse(json));\r\n  }\r\n\r\n  serialize(data) {\r\n    return new Serializer(this).serialize(data);\r\n  }\r\n\r\n  deserialize(data) {\r\n    return new Deserializer(this).deserialize(data);\r\n  }\r\n}\r\n"]}
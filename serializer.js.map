{"version":3,"sources":["serializer.es6"],"names":[],"mappings":"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","file":"serializer.js","sourcesContent":["\"use strict\";\r\nimport _ from 'lodash';\r\n\r\nexport default class Serializer {\r\n  static Symbols = {Serialize: Symbol()};\r\n\r\n  _instancesMap = new Map();\r\n  _instances = [];\r\n\r\n  constructor(jsonc) {\r\n    this.jsonc = jsonc;\r\n  }\r\n\r\n  serialize(data) {\r\n    this.data = data;\r\n    return {\r\n      instances: this._instances,\r\n      root: this._map(this.data)\r\n    };\r\n  }\r\n\r\n  convertRegisteredTypeToDto(obj) {\r\n    var reference = this._getInstance(obj);\r\n    if (reference)\r\n      return reference;\r\n\r\n    var instance = {\r\n      __type__: obj.constructor.__type__\r\n    };\r\n\r\n    reference = this._addInstance(obj, instance);\r\n\r\n    const data = Serializer.Symbols.Serialize in obj\r\n      ? obj[Serializer.Symbols.Serialize]()\r\n      : obj;\r\n\r\n    instance.__value__ = this._map(data);\r\n    return reference;\r\n  }\r\n\r\n  convertPlainObjectToDto(obj) {\r\n    var reference = this._getInstance(obj);\r\n    if (reference)\r\n      return reference;\r\n\r\n    var instance = {\r\n      __type__: \"__object__\"\r\n    };\r\n    reference = this._addInstance(obj, instance);\r\n\r\n    const data = Serializer.Symbols.Serialize in obj\r\n      ? obj[Serializer.Symbols.Serialize]()\r\n      : obj;\r\n\r\n    instance.__value__ = this._map(data);\r\n\r\n    return reference;\r\n  }\r\n\r\n  convertNativeTypeToDto(obj) {\r\n    var reference = this._getInstance(obj);\r\n    if (reference)\r\n      return reference;\r\n\r\n    var instance = {\r\n      __type__: \"__array__\"\r\n    };\r\n    reference = this._addInstance(obj, instance);\r\n\r\n    instance.__value__ = this._map(obj);\r\n\r\n    return reference;\r\n  }\r\n\r\n  isSerializableObject(obj) {\r\n    if (obj === null || obj === undefined)\r\n      return false;\r\n\r\n    var constructor = obj.constructor;\r\n    return (this.jsonc.hasType(constructor))\r\n      || constructor === Object\r\n      || constructor === Array;\r\n  }\r\n\r\n  _addInstance(originalObject, instance) {\r\n    if (this._instancesMap.get(originalObject))\r\n      return;\r\n    var reference = {__index__: this._instances.length};\r\n    this._instances.push(instance);\r\n    this._instancesMap.set(originalObject, reference);\r\n    return reference;\r\n  }\r\n\r\n  _map(obj) {\r\n    if (obj instanceof Array)\r\n      return _.map(obj, this._mapValue.bind(this), this);\r\n    else\r\n      return _.mapValues(obj, this._mapValue.bind(this), this);\r\n  }\r\n\r\n  _mapValue(value) {\r\n    var typeCategory = getTypeCategory(value);\r\n    if (typeCategory === \"primitive\")\r\n      return value;\r\n    if (typeCategory === \"object\")\r\n      return this._mapObject(value);\r\n\r\n    function getTypeCategory(value) {\r\n      var type = typeof value;\r\n      if (type === \"function\" || (value !== null && type === \"object\"))\r\n        return type;\r\n      return \"primitive\";\r\n    }\r\n  }\r\n\r\n  _mapObject(obj) {\r\n    if (!this.isSerializableObject(obj)) {\r\n      console.warn(`Object ${JSON.stringify(obj)} of constructor ${obj.constructor.toString()} is not a serializable object and will NOT be recorded!`);\r\n      return null;\r\n    }\r\n\r\n    if (obj.constructor.__type__)\r\n      return this.convertRegisteredTypeToDto(obj);\r\n\r\n    if (obj.constructor === Object)\r\n      return this.convertPlainObjectToDto(obj);\r\n\r\n    return this.convertNativeTypeToDto(obj);\r\n  }\r\n\r\n  _getInstance(instance) {\r\n    return this._instancesMap.get(instance);\r\n  }\r\n}\r\n"]}